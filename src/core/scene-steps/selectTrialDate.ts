import { Markup } from 'telegraf';
import { getCallbackData } from '../../utils/helpers';
import { replyMessage, replyWithKeyboard } from '../../utils/keyboard';
import { teacherService } from '../../feature/teacher/teacher.service';

/**
 * –®–∞–≥ –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –ø—Ä–æ–±–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è
 */
export async function selectTrialDateStep(ctx: any, state: any) {
    const data = getCallbackData(ctx);

    // ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –¥–∞—Ç—É
    const match = data?.match(/date_(\d{4}-\d{2}-\d{2})/);
    if (match) {
        const dateIso = match[1];
        state.date = dateIso;
        await replyMessage(ctx, `üìÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–∞—Ç—É: *${dateIso}*`, { parse_mode: 'Markdown' });
        return 'next';
    }

    // ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
    const subjectId = state.subjectId;
    if (!subjectId) {
        await replyMessage(ctx, '‚ö†Ô∏è –ü—Ä–µ–¥–º–µ—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω.');
        return 'leave';
    }

    // üìÖ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –¥–∞—Ç –∏–∑ —Å–µ—Ä–≤–∏—Å–∞
    const freeDates = await teacherService.getFreeDaysBySubject(subjectId);

    if (!freeDates.length) {
        await replyMessage(ctx, 'üòï –ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –¥–Ω–µ–π –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞.');
        return 'leave';
    }

    // üß± –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    const buttons = freeDates.map((d) => [
        Markup.button.callback(
            new Date(d).toLocaleDateString('ru-RU', {
                day: '2-digit',
                month: 'short',
                weekday: 'short',
            }),
            `date_${d}`,
        ),
    ]);

    await replyWithKeyboard(ctx, 'üìÖ –í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–±–æ–¥–Ω—É—é –¥–∞—Ç—É:', Markup.inlineKeyboard(buttons));
}
