import { Markup } from 'telegraf';
import { clearLastKeyboard, deleteSavedMessages, replyWithKeyboard } from '../../utils/keyboard';

/* -------------------------------------------------------------------------- */
/* ‚öôÔ∏è –•–µ–ª–ø–µ—Ä—ã                                                                 */
/* -------------------------------------------------------------------------- */

/** –°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤–∞ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫ */
function createMenuButtons(buttonGroups: string[][]) {
    return Markup.inlineKeyboard(
        buttonGroups.map((row) =>
            row.map((btn) => {
                const [label, action] = btn.split('|');
                return Markup.button.callback(label, action);
            }),
        ),
    );
}

/** –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é */
async function sendMenu(ctx: UnicornWizardContext, text: string, buttonGroups: string[][]) {
    await replyWithKeyboard(ctx, text, createMenuButtons(buttonGroups));
}

/* -------------------------------------------------------------------------- */
/* üìã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–µ–Ω—é                                                     */
/* -------------------------------------------------------------------------- */

export async function showBaseMenu(ctx: UnicornWizardContext) {
    await clearLastKeyboard(ctx);

    const name = ctx.from?.first_name || '–¥—Ä—É–≥';
    const greeting =
        `‚ú® –ü—Ä–∏–≤–µ—Ç, ${name}!\n\n` +
        `–Ø ‚Äî *Unicorn Assistant*, —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–Ω—è—Ç–∏—è–º–∏ –∏ —É—á–µ–Ω–∏–∫–∞–º–∏ üß†\n\n` +
        `–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n` +
        `‚Ä¢ üìÖ –°–æ–∑–¥–∞–≤–∞—Ç—å –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ\n` +
        `‚Ä¢ üßë‚Äçüè´ –†–∞–±–æ—Ç–∞—Ç—å —Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏\n` +
        `‚Ä¢ üßæ –£–ø—Ä–∞–≤–ª—è—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞–º–∏ –∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏\n\n` +
        `–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ üëá`;

    await ctx.reply(greeting, Markup.keyboard([['–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é']]).resize());
    await showMainMenu(ctx);
}

/* -------------------------------------------------------------------------- */
/* üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é                                                            */
/* -------------------------------------------------------------------------- */

export async function showMainMenu(ctx: UnicornWizardContext) {
    await deleteSavedMessages(ctx);

    const user = ctx.user;
    if (!user) {
        return ctx.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–ø—Ä–æ–±—É–π /start');
    }

    let buttonGroups: string[][] = [];

    switch (user.role) {
        case 'ADMIN':
            buttonGroups = [
                ['üßë‚Äçüéì –£—á–µ–Ω–∏–∫–∏|menu_students', 'üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ|schedule_menu'],
                ['üìã –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –≤–∏–∑–∏—Ç—ã|payments_pending', 'üí∏ –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—ã|unpaid_abonements'],
                ['üíµ –í—ã–ø–ª–∞—Ç–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é|teacher_withdrawal'],
            ];
            break;

        case 'TEACHER':
            buttonGroups = [
                ['üßë‚Äçüéì –ú–æ–∏ —É—á–µ–Ω–∏–∫–∏|menu_students', 'üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ|schedule_menu'],
                ['üïì –†–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è|availability_menu', 'üí∞ –ë–∞–ª–∞–Ω—Å|teacher_balance'],
            ];
            break;

        default:
            buttonGroups = [['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é|main_menu']];
            break;
    }

    await sendMenu(ctx, 'üìç –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', buttonGroups);
}
