import { Markup } from 'telegraf';
import { paymentService } from '../payment.service';
import { replyMessage, replyWithKeyboard } from '../../../utils/keyboard';

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –æ–¥–Ω–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º PENDING
 */
function formatPendingPaymentText(p: any): string {
    const studentName = `${p.student.firstName} ${p.student.lastName ?? ''}`.trim();
    const teacherName = p.visit?.schedule?.teacher?.name ?? '‚Äî';
    const subjectName = p.visit?.schedule?.subject?.name ?? '‚Äî';
    const amount = p.amount.toFixed(2);
    const date = p.date.toLocaleDateString('ru-RU');
    const comment = p.comment ? `üí¨ ${p.comment}\n` : '';

    return (
        `üë®‚Äçüéì ${studentName}\n` +
        `üìò ${subjectName}\n` +
        `üë®‚Äçüè´ ${teacherName}\n` +
        `üíµ ${amount} ‚ÇΩ\n` +
        `üìÖ ${date}\n` +
        `–û–ø–ª–∞—Ç–∏—Ç—å: /payment_onetime${p.id}\n\n`
    );
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–ª–∞—Ç–µ–∂–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º PENDING
 */
export async function showPendingPaymentsAction(ctx: any) {
    try {
        if (ctx.callbackQuery) await ctx.answerCbQuery().catch(() => {});
        const payments = await paymentService.getPendingPayments();

        if (!payments.length) {
            return replyWithKeyboard(
                ctx,
                '‚úÖ –ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–µ–π.',
                Markup.inlineKeyboard([[Markup.button.callback('‚¨Ö –ù–∞–∑–∞–¥', 'main_menu')]]),
            );
        }

        const text =
            '‚è≥ –û–∂–∏–¥–∞—é—â–∏–µ –ø–ª–∞—Ç–µ–∂–∏ (PENDING):\n\n' +
            payments.map(formatPendingPaymentText).join('');

        const keyboard = Markup.inlineKeyboard([
            [Markup.button.callback('‚¨Ö –ù–∞–∑–∞–¥', 'main_menu')],
        ]);

        // üëá –±–µ–∑ parse_mode ‚Äî Telegram –Ω–µ –ø–∞—Ä—Å–∏—Ç Markdown, –±–µ–∑–æ–ø–∞—Å–Ω–æ
        await replyMessage(ctx, text, keyboard);
    } catch (err: any) {
        console.error('–û—à–∏–±–∫–∞ showPendingPaymentsAction:', err);
        await replyMessage(
            ctx,
            `‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π:\n${err.message}`,
        );
    }
}
