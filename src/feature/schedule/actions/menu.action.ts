import { Markup } from 'telegraf';
import { clearLastKeyboard, replyWithKeyboard } from '../../../utils/keyboard';
import { deleteMessageSafe } from '../../../utils/helpers';
import { buildDateButtons } from '../../../utils/date-buttons';

export async function showScheduleMenuAction(ctx: any, offsetDays = 0) {
    try {
        if (ctx.callbackQuery) await ctx.answerCbQuery().catch(() => {});
        await clearLastKeyboard(ctx);
        await deleteMessageSafe(ctx);

        // üîπ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–∞—Ç —á–µ—Ä–µ–∑ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        const keyboard = buildDateButtons(offsetDays, 'schedule_day_');

        // üîπ –±–µ—Ä—ë–º –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏
        const buttons = keyboard.reply_markup.inline_keyboard;

        // üîπ –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É
        buttons.push([Markup.button.callback('‚¨Ö –ù–∞–∑–∞–¥', 'main_menu')]);

        await replyWithKeyboard(
            ctx,
            'üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è:',
            Markup.inlineKeyboard(buttons),
        );
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ showScheduleMenuAction:', err);
        await ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–µ–Ω—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.');
    }
}
