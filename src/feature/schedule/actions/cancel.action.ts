import { scheduleService } from '../schedule.service';

export async function cancelScheduleAction(ctx: any) {
    try {
        if (ctx.callbackQuery) await ctx.answerCbQuery().catch(() => {});

        const data = ctx.callbackQuery?.data || '';
        const match = data.match(/cancel_schedule_(\d+)/);
        const id = match ? parseInt(match[1], 10) : NaN;

        if (isNaN(id)) {
            return ctx.reply('‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.');
        }

        // üßæ –û—Ç–º–µ–Ω—è–µ–º –∑–∞–Ω—è—Ç–∏–µ
        const schedule = await scheduleService.cancelSchedule(id);
        if (!schedule) {
            return ctx.reply('‚ùå –ó–∞–Ω—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.');
        }

        // üì¨ –£–≤–µ–¥–æ–º–ª—è–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
        await scheduleService.notifyTeacherAboutCancellation(ctx, schedule);

        // ‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await ctx.editMessageText('‚úÖ –ó–∞–Ω—è—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ.');
    } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–Ω—è—Ç–∏—è:', err);
        await ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –∑–∞–Ω—è—Ç–∏—è.');
    }
}
