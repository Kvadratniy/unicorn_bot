import { scheduleService } from '../../schedule.service';
import { showMainMenu } from '../../../menu/menus';
import { toMSKfromUTC } from '../../../../utils/time';
import { studentService } from '../../../student/student.service';

export async function saveScheduleStep(ctx: any, state: any): Promise<'leave'> {
    const { studentId, teacherId, subjectId, startDate, endDate, type, abonementId } = state;
    console.log('state: ', state);

    // 1Ô∏è‚É£ –°–æ–∑–¥–∞—ë–º –∑–∞–Ω—è—Ç–∏–µ
    await scheduleService.createLesson(
        startDate,
        endDate,
        studentId,
        teacherId,
        subjectId,
        type,
        abonementId,
    );

    // 2Ô∏è‚É£ –£–≤–µ–¥–æ–º–ª—è–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –æ –ø—Ä–æ–±–Ω–æ–º (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    try {
        // const teacher = await scheduleService.getTeacher(teacherId);
        // const student = await studentService.getStudent(studentId);
        // const subject = await scheduleService.getSubjectWithTeachers(subjectId);
        // if (type === 'TRIAL' && teacher?.user?.telegramId) {
        //     const msg =
        //         `üìÖ *–ù–æ–≤–æ–µ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ!*\n\n` +
        //         `üë®‚Äçüéì –£—á–µ–Ω–∏–∫: *${student?.firstName} ${student?.lastName ?? ''}*\n` +
        //         `üìò –ü—Ä–µ–¥–º–µ—Ç: *${subject?.name ?? '-'}*\n` +
        //         `üïí ${toMSKfromUTC(startDate).toLocaleTimeString('ru-RU', {
        //             hour: '2-digit',
        //             minute: '2-digit',
        //         })}\n` +
        //         `üìç –î–∞—Ç–∞: ${toMSKfromUTC(startDate).toLocaleDateString('ru-RU')}`;
        //
        //     await ctx.telegram
        //         .sendMessage(teacher.user.telegramId, msg, { parse_mode: 'Markdown' })
        //         .catch(() => {});
        // }
    } catch (err) {
        console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', err);
    }

    // 3Ô∏è‚É£ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await showMainMenu(ctx);
    return 'leave';
}
