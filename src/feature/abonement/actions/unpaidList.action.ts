import { Markup } from 'telegraf';
import { abonementService } from '../abonement.service';
import { replyMessage, replyWithKeyboard } from '../../../utils/keyboard';

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –æ–¥–Ω–æ–≥–æ –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞
 */
function formatAbonementText(a: any): string {
    const studentName = `${a.student.firstName} ${a.student.lastName ?? ''}`.trim();
    const teacherName = a.teacher?.name ?? '‚Äî';
    const subjectName = a.Subject?.name ?? a.template?.subject?.name ?? '‚Äî';
    const price = a.template?.price ?? 0;
    const start = a.startDate.toLocaleDateString('ru-RU');
    const end = a.endDate.toLocaleDateString('ru-RU');

    return (
        `üë®‚Äçüéì *${studentName}*\n` +
        `üìò ${subjectName}\n` +
        `üë®‚Äçüè´ ${teacherName}\n` +
        `üí∞ ${price} ‚ÇΩ\n` +
        `üìÖ ${start} ‚Äî ${end}\n` +
        `–û–ø–ª–∞—Ç–∏—Ç—å: /payment${a.id}\n\n`
    );
}

/**
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤ (status = UNPAIND)
 */
export async function showUnpaidAbonementsAction(ctx: any) {
    try {
        // --- 1Ô∏è‚É£ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback ---
        if (ctx.callbackQuery) {
            await ctx.answerCbQuery().catch(() => {});
        }

        // --- 2Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Ä–≤–∏—Å–∞ ---
        const abonements = await abonementService.getUnpaidAbonements();

        // --- 3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ ---
        if (!abonements.length) {
            return replyWithKeyboard(
                ctx,
                '‚úÖ –í—Å–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—ã –æ–ø–ª–∞—á–µ–Ω—ã!',
                Markup.inlineKeyboard([Markup.button.callback('‚¨Ö –ù–∞–∑–∞–¥', 'main_menu')]),
            );
        }

        // --- 4Ô∏è‚É£ –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ ---
        const text =
            'üí∏ *–ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—ã:*\n\n' + abonements.map(formatAbonementText).join('');

        // --- 5Ô∏è‚É£ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ---
        const keyboard = Markup.inlineKeyboard([Markup.button.callback('‚¨Ö –ù–∞–∑–∞–¥', 'main_menu')]);

        // --- 6Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ---
        await replyMessage(ctx, text, {
            parse_mode: 'Markdown',
            ...keyboard,
        });
    } catch (err: any) {
        console.error('–û—à–∏–±–∫–∞ showUnpaidAbonementsAction:', err);
        await replyMessage(
            ctx,
            `‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤:\n\`${err.message}\``,
            { parse_mode: 'Markdown' },
        );
    }
}
