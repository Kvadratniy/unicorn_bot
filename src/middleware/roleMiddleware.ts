import { Context } from 'telegraf';
import prisma, { Role } from '../core/prisma';

export async function roleMiddleware(ctx: Context, next: () => Promise<any>) {
    if (!ctx.from) return next();

    let user = (ctx as any).user; // –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º

    if (!user) {
        const telegramId = ctx.from.id.toString();

        user = await prisma.user.findUnique({ where: { telegramId } });

        if (!user) {
            user = await prisma.user.create({
                data: {
                    telegramId,
                    username: ctx.from?.username ?? null,
                    role: ['440005074', '248543646'].includes(telegramId) ? Role.ADMIN : Role.GUEST,
                },
            });
            console.log(`üë§ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${telegramId}`);
        }

        (ctx as any).user = user; // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    }

    if (user.role === 'GUEST') {
        await ctx.reply('üîí –î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω. –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞.');
        return;
    }

    return next();
}
